from telebot import types
from cards_1 import parser
from pacre import parser_1
import telebot
import sqlite3
bot = telebot.TeleBot("5176929450:AAEh-bNHd8prEP1UZe2ER-js6eW9hv3qrwA")



@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –≤–≤–µ–¥–∏—Ç–µ /choice ')
    connect = sqlite3.connect('users.db')
    cursor = connect.cursor()


    cursor.execute("""CREATE TABLE IF NOT EXISTS login_id(
    id INTEGER
    user_name VARCHAR
    )""")

    connect.commit()
    #–æ—Ç–º–µ–Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    people_id = message.chat.id
    cursor.execute(f"SELECT id FROM login_id WHERE id = {people_id}")
    #–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    data = cursor.fetchone()
    if data is None:
        user_id = [message.chat.id]
        cursor.execute("INSERT INTO login_id id VALUES(?);", user_id)
        connect.commit()


@bot.message_handler(commands=['delete'])
def delete(message):
    connect = sqlite3.connect('users.db')
    cursor = connect.cursor()


    people_id = message.chat.id
    cursor.execute(f"DELETE FROM login_id WHERE id = {people_id}")
    connect.commit()


@bot.message_handler(commands=['choice'])
def get_text(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('üí≥ –ö—Ä–µ–¥–∏—Ç–Ω—ã–µ')
    item2 = types.KeyboardButton('üí≥ –î–µ–±–µ—Ç–æ–≤—ã–µ')
    markup.add(item1, item2)
    mess = f'<b>  –ü—Ä–∏–≤–µ—Ç, —è —á–∞—Ç –±–æ—Ç –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –∫–∞—Ä—Ç –Ω–∞ —Å–∞–π—Ç–µ https://minfin.com.ua/cards/credit/ \n –ö–∞–∫–∏–µ –∫–∞—Ä—Ç—ã —Ç–µ–±–µ –Ω–∞–¥–æ —Å–ø–∞—Ä—Å–∏—Ç—å?  </b>'
    bot.send_message(message.chat.id, mess, reply_markup=markup, parse_mode='html')


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.chat.type == "private":
        if message.text == 'üí≥ –ö—Ä–µ–¥–∏—Ç–Ω—ã–µ':
            parser()
            doc = open(r'C:\Users\–º–≤–∏–¥–µ–æ\PycharmProjects\pythonProject1\cards.csv', 'rb')
            bot.send_document(message.from_user.id, doc)
            doc.close()
        elif message.text == 'üí≥ –î–µ–±–µ—Ç–æ–≤—ã–µ':
            parser_1()
            doc = open(r'C:\Users\–º–≤–∏–¥–µ–æ\PycharmProjects\pythonProject1\cards1.csv', 'rb')
            bot.send_document(message.from_user.id, doc)
            doc.close()






#@bot.message_handler()
#def get_user_text(message):
    #if message.text == 'Hello':
        #bot.send_message(message.chat.id, "–ò –¢–ï–ë–ï –ë–†–ê–¢–ê–ù—Ä –ù–ï –•–í–ê–†–ê–¢–¨ !!!", parse_mode='html')
    #elif message.text == 'id':
        #bot.send_message(message.chat.id, f"–¢–≤–æ–π ID:{message.from_user.id}")
    #elif message.text == 'photo':
        #photo = open('russian-hacker-linkedin-twaggies.jpg', 'rb')
        #bot.send_photo(message.chat.id, photo)
    #else:
        #bot.send_message(message.chat.id, "—è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é ", parse_mode='html')



bot.polling()